type Cliente {
  id: ID
  idVendedor: ID
  nombre: String
  apellido: String
  empresa: String
  emails: [Email]
  edad: Int
  tipo: TipoCliente
}

type Pedido {
  id: ID
  productos: [PedidoProducto]
  total: Int
  fecha: String
  cliente: ID
  estado: EstadoPedido
}
type PedidoProducto {
  id: ID
  cantidad: Int
}
enum TipoCliente {
  BASICO
  PREMIUM
}
enum EstadoPedido {
  PENDIENTE
  COMPLETADO
  CANCELADO
}
type Email {
  email: String
}
type Producto {
  id: ID
  nombre: String
  precio: Int
  stock: Int
}
type MejorCliente {
  total: Float
  cliente: [Cliente]
}

type Token {
  token: String
}
type Usuario {
  usuario: String
  id: ID
  nombre: String
  rol: String
}

type Query {
  # Dejar limite opcional para poder obviarlo y traer todos los clientes
  getClientes(limite: Int, offset: Int, idVendedor: String): [Cliente]
  getCliente(id: ID): Cliente
  totalClientes: Int
  #Productos
  getProductos(limite: Int, offset: Int, stock: Boolean): [Producto]
  getProducto(id: ID): Producto
  totalProductos: Int
  #Pedidos
  getPedidos(clienteId: ID): [Pedido]
  topClientes: [MejorCliente]
  #Usuarios
  getUsuario: Usuario
}
input ClienteInput {
  id: ID
  idVendedor: ID
  nombre: String!
  apellido: String!
  empresa: String
  emails: [EmailInput]
  edad: Int
  tipo: TipoCliente
}

# Este comentario se ignora
input EmailInput {
  email: String
}
input ProductoInput {
  id: ID
  nombre: String!
  precio: Int!
  stock: Int!
}
input PedidoInput {
  id: ID
  productos: [PedidoProductoInput]
  total: Int
  fecha: String
  cliente: ID
  estado: EstadoPedido
  idVendedor: ID
}
input PedidoProductoInput {
  id: ID
  cantidad: Int
}

input UsuarioInput {
  usuario: String!
  password: String!
  nombre: String!
  rol: String!
}

input AutenticarInput {
  usuario: String!
  password: String!
}

"""
Mutations para crar nuevos clientes
"""
type Mutation {
  """
  Te permite crear nuevos clientes en la base de dastos
  """
  crearCliente(input: ClienteInput): Cliente
  actualizarCliente(input: ClienteInput): Cliente
  eliminarCliente(id: ID!): String
  #productos
  nuevoProducto(input: ProductoInput): Producto
  actualizarProducto(input: ProductoInput): Producto
  eliminarProducto(id: ID!): String
  #pedidos
  nuevoPedido(input: PedidoInput): Pedido
  actualizarPedido(input: PedidoInput): Pedido
  crearUsuario(input: UsuarioInput): String
  autenticarUsuario(input: AutenticarInput): Token
}
